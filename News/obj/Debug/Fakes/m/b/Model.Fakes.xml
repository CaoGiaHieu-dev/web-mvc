<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Model.Fakes</name>
    </assembly>
    <members>
        <member name="T:Model.DAO.Fakes.ShimAccountDAO">
            <summary>Shim type of Model.DAO.AccountDAO</summary>
        </member>
        <member name="M:Model.DAO.Fakes.ShimAccountDAO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.DAO.Fakes.ShimAccountDAO.#ctor(Model.DAO.AccountDAO)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.DAO.Fakes.ShimAccountDAO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.DAO.Fakes.ShimAccountDAO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.Constructor">
            <summary>Sets the shim of AccountDAO.AccountDAO()</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.getIDString">
            <summary>Sets the shim of AccountDAO.getID(String user)</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.loginStringString">
            <summary>Sets the shim of AccountDAO.login(String user, String password)</summary>
        </member>
        <member name="T:Model.DAO.Fakes.ShimAccountDAO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.AllInstances.getIDString">
            <summary>Sets the shim of AccountDAO.getID(String user)</summary>
        </member>
        <member name="P:Model.DAO.Fakes.ShimAccountDAO.AllInstances.loginStringString">
            <summary>Sets the shim of AccountDAO.login(String user, String password)</summary>
        </member>
        <member name="T:Model.DAO.Fakes.StubAccountDAO">
            <summary>Stub type of Model.DAO.AccountDAO</summary>
        </member>
        <member name="M:Model.DAO.Fakes.StubAccountDAO.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.DAO.Fakes.StubAccountDAO.InitializeStub">
            <summary>Initializes a new instance of type StubAccountDAO</summary>
        </member>
        <member name="P:Model.DAO.Fakes.StubAccountDAO.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.DAO.Fakes.StubAccountDAO.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.DAO.Fakes.StubAccountDAO.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Model.Fakes.ShimAccount">
            <summary>Shim type of Model.Account</summary>
        </member>
        <member name="M:Model.Fakes.ShimAccount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Fakes.ShimAccount.#ctor(Model.Account)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Fakes.ShimAccount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Fakes.ShimAccount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Fakes.ShimAccount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Fakes.ShimAccount.Constructor">
            <summary>Sets the shim of Account.Account()</summary>
        </member>
        <member name="P:Model.Fakes.ShimAccount.loginStringString">
            <summary>Sets the shim of Account.login(String user, String pass)</summary>
        </member>
        <member name="T:Model.Fakes.ShimAccount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Fakes.ShimAccount.AllInstances.loginStringString">
            <summary>Sets the shim of Account.login(String user, String pass)</summary>
        </member>
        <member name="T:Model.Fakes.StubAccount">
            <summary>Stub type of Model.Account</summary>
        </member>
        <member name="M:Model.Fakes.StubAccount.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Fakes.StubAccount.InitializeStub">
            <summary>Initializes a new instance of type StubAccount</summary>
        </member>
        <member name="P:Model.Fakes.StubAccount.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Fakes.StubAccount.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Fakes.StubAccount.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Model.Models.Fakes.ShimNewsDbContext">
            <summary>Shim type of Model.Models.NewsDbContext</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.#ctor(Model.Models.NewsDbContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimNewsDbContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.Constructor">
            <summary>Sets the shim of NewsDbContext.NewsDbContext()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of NewsDbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.UserGet">
            <summary>Sets the shim of NewsDbContext.get_User()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.UserSetDbSetOfUser">
            <summary>Sets the shim of NewsDbContext.set_User(DbSet`1&lt;User&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.menuGet">
            <summary>Sets the shim of NewsDbContext.get_menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.menuSetDbSetOfmenu">
            <summary>Sets the shim of NewsDbContext.set_menu(DbSet`1&lt;menu&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.sysdiagramsGet">
            <summary>Sets the shim of NewsDbContext.get_sysdiagrams()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.sysdiagramsSetDbSetOfsysdiagrams">
            <summary>Sets the shim of NewsDbContext.set_sysdiagrams(DbSet`1&lt;sysdiagrams&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.tintucGet">
            <summary>Sets the shim of NewsDbContext.get_tintuc()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.tintucSetDbSetOftintuc">
            <summary>Sets the shim of NewsDbContext.set_tintuc(DbSet`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.ShimNewsDbContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of NewsDbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.UserGet">
            <summary>Sets the shim of NewsDbContext.get_User()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.UserSetDbSetOfUser">
            <summary>Sets the shim of NewsDbContext.set_User(DbSet`1&lt;User&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.menuGet">
            <summary>Sets the shim of NewsDbContext.get_menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.menuSetDbSetOfmenu">
            <summary>Sets the shim of NewsDbContext.set_menu(DbSet`1&lt;menu&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.sysdiagramsGet">
            <summary>Sets the shim of NewsDbContext.get_sysdiagrams()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.sysdiagramsSetDbSetOfsysdiagrams">
            <summary>Sets the shim of NewsDbContext.set_sysdiagrams(DbSet`1&lt;sysdiagrams&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.tintucGet">
            <summary>Sets the shim of NewsDbContext.get_tintuc()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimNewsDbContext.AllInstances.tintucSetDbSetOftintuc">
            <summary>Sets the shim of NewsDbContext.set_tintuc(DbSet`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.ShimUser">
            <summary>Shim type of Model.Models.User</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimUser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimUser.#ctor(Model.Models.User)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimUser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.ShimUser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.Constructor">
            <summary>Sets the shim of User.User()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.FullnameGet">
            <summary>Sets the shim of User.get_Fullname()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.FullnameSetString">
            <summary>Sets the shim of User.set_Fullname(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.IDGet">
            <summary>Sets the shim of User.get_ID()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.IDSetInt32">
            <summary>Sets the shim of User.set_ID(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.PasswordGet">
            <summary>Sets the shim of User.get_Password()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.PasswordSetString">
            <summary>Sets the shim of User.set_Password(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.UsernameGet">
            <summary>Sets the shim of User.get_Username()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.UsernameSetString">
            <summary>Sets the shim of User.set_Username(String value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.ShimUser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.FullnameGet">
            <summary>Sets the shim of User.get_Fullname()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.FullnameSetString">
            <summary>Sets the shim of User.set_Fullname(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.IDGet">
            <summary>Sets the shim of User.get_ID()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.IDSetInt32">
            <summary>Sets the shim of User.set_ID(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.PasswordGet">
            <summary>Sets the shim of User.get_Password()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.PasswordSetString">
            <summary>Sets the shim of User.set_Password(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.UsernameGet">
            <summary>Sets the shim of User.get_Username()</summary>
        </member>
        <member name="P:Model.Models.Fakes.ShimUser.AllInstances.UsernameSetString">
            <summary>Sets the shim of User.set_Username(String value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimmenu">
            <summary>Shim type of Model.Models.menu</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimmenu.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimmenu.#ctor(Model.Models.menu)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimmenu.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimmenu.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.Constructor">
            <summary>Sets the shim of menu.menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.datebeginGet">
            <summary>Sets the shim of menu.get_datebegin()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.datebeginSetNullableOfDateTime">
            <summary>Sets the shim of menu.set_datebegin(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.hideGet">
            <summary>Sets the shim of menu.get_hide()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.hideSetNullableOfBoolean">
            <summary>Sets the shim of menu.set_hide(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.id_mGet">
            <summary>Sets the shim of menu.get_id_m()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.id_mSetInt32">
            <summary>Sets the shim of menu.set_id_m(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.linkGet">
            <summary>Sets the shim of menu.get_link()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.linkSetString">
            <summary>Sets the shim of menu.set_link(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.metaGet">
            <summary>Sets the shim of menu.get_meta()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.metaSetString">
            <summary>Sets the shim of menu.set_meta(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.nameGet">
            <summary>Sets the shim of menu.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.nameSetString">
            <summary>Sets the shim of menu.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.positionGet">
            <summary>Sets the shim of menu.get_position()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.positionSetNullableOfInt32">
            <summary>Sets the shim of menu.set_position(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.tintucGet">
            <summary>Sets the shim of menu.get_tintuc()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.tintucSetICollectionOftintuc">
            <summary>Sets the shim of menu.set_tintuc(ICollection`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimmenu.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.datebeginGet">
            <summary>Sets the shim of menu.get_datebegin()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.datebeginSetNullableOfDateTime">
            <summary>Sets the shim of menu.set_datebegin(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.hideGet">
            <summary>Sets the shim of menu.get_hide()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.hideSetNullableOfBoolean">
            <summary>Sets the shim of menu.set_hide(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.id_mGet">
            <summary>Sets the shim of menu.get_id_m()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.id_mSetInt32">
            <summary>Sets the shim of menu.set_id_m(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.linkGet">
            <summary>Sets the shim of menu.get_link()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.linkSetString">
            <summary>Sets the shim of menu.set_link(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.metaGet">
            <summary>Sets the shim of menu.get_meta()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.metaSetString">
            <summary>Sets the shim of menu.set_meta(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.nameGet">
            <summary>Sets the shim of menu.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.nameSetString">
            <summary>Sets the shim of menu.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.positionGet">
            <summary>Sets the shim of menu.get_position()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.positionSetNullableOfInt32">
            <summary>Sets the shim of menu.set_position(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.tintucGet">
            <summary>Sets the shim of menu.get_tintuc()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimmenu.AllInstances.tintucSetICollectionOftintuc">
            <summary>Sets the shim of menu.set_tintuc(ICollection`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimsysdiagrams">
            <summary>Shim type of Model.Models.sysdiagrams</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimsysdiagrams.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimsysdiagrams.#ctor(Model.Models.sysdiagrams)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimsysdiagrams.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimsysdiagrams.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.Constructor">
            <summary>Sets the shim of sysdiagrams.sysdiagrams()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.definitionGet">
            <summary>Sets the shim of sysdiagrams.get_definition()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.definitionSetByteArray">
            <summary>Sets the shim of sysdiagrams.set_definition(Byte[] value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.diagram_idGet">
            <summary>Sets the shim of sysdiagrams.get_diagram_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.diagram_idSetInt32">
            <summary>Sets the shim of sysdiagrams.set_diagram_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.nameGet">
            <summary>Sets the shim of sysdiagrams.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.nameSetString">
            <summary>Sets the shim of sysdiagrams.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.principal_idGet">
            <summary>Sets the shim of sysdiagrams.get_principal_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.principal_idSetInt32">
            <summary>Sets the shim of sysdiagrams.set_principal_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.versionGet">
            <summary>Sets the shim of sysdiagrams.get_version()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.versionSetNullableOfInt32">
            <summary>Sets the shim of sysdiagrams.set_version(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimsysdiagrams.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.definitionGet">
            <summary>Sets the shim of sysdiagrams.get_definition()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.definitionSetByteArray">
            <summary>Sets the shim of sysdiagrams.set_definition(Byte[] value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.diagram_idGet">
            <summary>Sets the shim of sysdiagrams.get_diagram_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.diagram_idSetInt32">
            <summary>Sets the shim of sysdiagrams.set_diagram_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.nameGet">
            <summary>Sets the shim of sysdiagrams.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.nameSetString">
            <summary>Sets the shim of sysdiagrams.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.principal_idGet">
            <summary>Sets the shim of sysdiagrams.get_principal_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.principal_idSetInt32">
            <summary>Sets the shim of sysdiagrams.set_principal_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.versionGet">
            <summary>Sets the shim of sysdiagrams.get_version()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimsysdiagrams.AllInstances.versionSetNullableOfInt32">
            <summary>Sets the shim of sysdiagrams.set_version(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimtintuc">
            <summary>Shim type of Model.Models.tintuc</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimtintuc.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimtintuc.#ctor(Model.Models.tintuc)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimtintuc.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Model.Models.Fakes.Shimtintuc.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.Constructor">
            <summary>Sets the shim of tintuc.tintuc()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.datebeginGet">
            <summary>Sets the shim of tintuc.get_datebegin()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.datebeginSetNullableOfDateTime">
            <summary>Sets the shim of tintuc.set_datebegin(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.descriptionGet">
            <summary>Sets the shim of tintuc.get_description()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.descriptionSetString">
            <summary>Sets the shim of tintuc.set_description(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.detailGet">
            <summary>Sets the shim of tintuc.get_detail()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.detailSetString">
            <summary>Sets the shim of tintuc.set_detail(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.hideGet">
            <summary>Sets the shim of tintuc.get_hide()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.hideSetNullableOfBoolean">
            <summary>Sets the shim of tintuc.set_hide(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.idGet">
            <summary>Sets the shim of tintuc.get_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.idSetInt32">
            <summary>Sets the shim of tintuc.set_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.id_mGet">
            <summary>Sets the shim of tintuc.get_id_m()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.id_mSetInt32">
            <summary>Sets the shim of tintuc.set_id_m(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.imgGet">
            <summary>Sets the shim of tintuc.get_img()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.imgSetString">
            <summary>Sets the shim of tintuc.set_img(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.linkGet">
            <summary>Sets the shim of tintuc.get_link()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.linkSetString">
            <summary>Sets the shim of tintuc.set_link(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.menuGet">
            <summary>Sets the shim of tintuc.get_menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.menuSetmenu">
            <summary>Sets the shim of tintuc.set_menu(menu value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.metaGet">
            <summary>Sets the shim of tintuc.get_meta()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.metaSetString">
            <summary>Sets the shim of tintuc.set_meta(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.nameGet">
            <summary>Sets the shim of tintuc.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.nameSetString">
            <summary>Sets the shim of tintuc.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.positionGet">
            <summary>Sets the shim of tintuc.get_position()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.positionSetNullableOfInt32">
            <summary>Sets the shim of tintuc.set_position(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.Shimtintuc.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.datebeginGet">
            <summary>Sets the shim of tintuc.get_datebegin()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.datebeginSetNullableOfDateTime">
            <summary>Sets the shim of tintuc.set_datebegin(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.descriptionGet">
            <summary>Sets the shim of tintuc.get_description()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.descriptionSetString">
            <summary>Sets the shim of tintuc.set_description(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.detailGet">
            <summary>Sets the shim of tintuc.get_detail()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.detailSetString">
            <summary>Sets the shim of tintuc.set_detail(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.hideGet">
            <summary>Sets the shim of tintuc.get_hide()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.hideSetNullableOfBoolean">
            <summary>Sets the shim of tintuc.set_hide(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.idGet">
            <summary>Sets the shim of tintuc.get_id()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.idSetInt32">
            <summary>Sets the shim of tintuc.set_id(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.id_mGet">
            <summary>Sets the shim of tintuc.get_id_m()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.id_mSetInt32">
            <summary>Sets the shim of tintuc.set_id_m(Int32 value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.imgGet">
            <summary>Sets the shim of tintuc.get_img()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.imgSetString">
            <summary>Sets the shim of tintuc.set_img(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.linkGet">
            <summary>Sets the shim of tintuc.get_link()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.linkSetString">
            <summary>Sets the shim of tintuc.set_link(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.menuGet">
            <summary>Sets the shim of tintuc.get_menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.menuSetmenu">
            <summary>Sets the shim of tintuc.set_menu(menu value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.metaGet">
            <summary>Sets the shim of tintuc.get_meta()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.metaSetString">
            <summary>Sets the shim of tintuc.set_meta(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.nameGet">
            <summary>Sets the shim of tintuc.get_name()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.nameSetString">
            <summary>Sets the shim of tintuc.set_name(String value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.positionGet">
            <summary>Sets the shim of tintuc.get_position()</summary>
        </member>
        <member name="P:Model.Models.Fakes.Shimtintuc.AllInstances.positionSetNullableOfInt32">
            <summary>Sets the shim of tintuc.set_position(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="T:Model.Models.Fakes.StubNewsDbContext">
            <summary>Stub type of Model.Models.NewsDbContext</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.AttachBackingFieldToUser">
            <summary>Attaches delegates to emulate StubNewsDbContext.User as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.AttachBackingFieldTomenu">
            <summary>Attaches delegates to emulate StubNewsDbContext.menu as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.AttachBackingFieldTosysdiagrams">
            <summary>Attaches delegates to emulate StubNewsDbContext.sysdiagrams as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.AttachBackingFieldTotintuc">
            <summary>Attaches delegates to emulate StubNewsDbContext.tintuc as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.InitializeStub">
            <summary>Initializes a new instance of type StubNewsDbContext</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.MenuGet">
            <summary>Sets the stub of NewsDbContext.get_menu()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.MenuSetDbSetOfmenu">
            <summary>Sets the stub of NewsDbContext.set_menu(DbSet`1&lt;menu&gt; value)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of NewsDbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of NewsDbContext.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.SaveChangesAsync">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.SaveChangesAsync01">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.SaveChangesAsyncCancellationToken">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.SysdiagramsGet">
            <summary>Sets the stub of NewsDbContext.get_sysdiagrams()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.SysdiagramsSetDbSetOfsysdiagrams">
            <summary>Sets the stub of NewsDbContext.set_sysdiagrams(DbSet`1&lt;sysdiagrams&gt; value)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.TintucGet">
            <summary>Sets the stub of NewsDbContext.get_tintuc()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.TintucSetDbSetOftintuc">
            <summary>Sets the stub of NewsDbContext.set_tintuc(DbSet`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.UserGet">
            <summary>Sets the stub of NewsDbContext.get_User()</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.UserSetDbSetOfUser">
            <summary>Sets the stub of NewsDbContext.set_User(DbSet`1&lt;User&gt; value)</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubNewsDbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:Model.Models.Fakes.StubNewsDbContext.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.User">
            <summary>Sets the stub of NewsDbContext.get_User()</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.menu">
            <summary>Sets the stub of NewsDbContext.get_menu()</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.sysdiagrams">
            <summary>Sets the stub of NewsDbContext.get_sysdiagrams()</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubNewsDbContext.tintuc">
            <summary>Sets the stub of NewsDbContext.get_tintuc()</summary>
        </member>
        <member name="T:Model.Models.Fakes.StubUser">
            <summary>Stub type of Model.Models.User</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubUser.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.StubUser.InitializeStub">
            <summary>Initializes a new instance of type StubUser</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubUser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubUser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Models.Fakes.StubUser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Model.Models.Fakes.Stubmenu">
            <summary>Stub type of Model.Models.menu</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubmenu.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubmenu.AttachBackingFieldTotintuc">
            <summary>Attaches delegates to emulate Stubmenu.tintuc as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubmenu.InitializeStub">
            <summary>Initializes a new instance of type Stubmenu</summary>
        </member>
        <member name="F:Model.Models.Fakes.Stubmenu.TintucGet">
            <summary>Sets the stub of menu.get_tintuc()</summary>
        </member>
        <member name="F:Model.Models.Fakes.Stubmenu.TintucSetICollectionOftintuc">
            <summary>Sets the stub of menu.set_tintuc(ICollection`1&lt;tintuc&gt; value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubmenu.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubmenu.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubmenu.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubmenu.tintuc">
            <summary>Sets the stub of menu.get_tintuc()</summary>
        </member>
        <member name="T:Model.Models.Fakes.Stubsysdiagrams">
            <summary>Stub type of Model.Models.sysdiagrams</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubsysdiagrams.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubsysdiagrams.InitializeStub">
            <summary>Initializes a new instance of type Stubsysdiagrams</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubsysdiagrams.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubsysdiagrams.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubsysdiagrams.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Model.Models.Fakes.Stubtintuc">
            <summary>Stub type of Model.Models.tintuc</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubtintuc.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubtintuc.AttachBackingFieldTomenu">
            <summary>Attaches delegates to emulate Stubtintuc.menu as a property with a backing field.</summary>
        </member>
        <member name="M:Model.Models.Fakes.Stubtintuc.InitializeStub">
            <summary>Initializes a new instance of type Stubtintuc</summary>
        </member>
        <member name="F:Model.Models.Fakes.Stubtintuc.MenuGet">
            <summary>Sets the stub of tintuc.get_menu()</summary>
        </member>
        <member name="F:Model.Models.Fakes.Stubtintuc.MenuSetmenu">
            <summary>Sets the stub of tintuc.set_menu(menu value)</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubtintuc.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubtintuc.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubtintuc.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Model.Models.Fakes.Stubtintuc.menu">
            <summary>Sets the stub of tintuc.get_menu()</summary>
        </member>
    </members>
</doc>
